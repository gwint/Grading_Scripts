BankAccount (worth 3 points)
	-0.5 constructor
		-0.25 throws exception if balance is negative
		-0.25 correctly using static numAccounts to initialuze idNum
	-0.5 getter methods 
		-0.25 getBalance() present and correct
		-0.25 getIdNum() present and correct
	-0.25 reset()
		-0.25 method present and zeroes static field properly
	-0.5 toString()
		-0.5 correct String returned
	-0.5 deposit()
		-0.25 throws exception when amount is negative
		-0.25 updates balance correctly
	-0.75 withdraw()
		-0.25 throws acception if amount is negative
		-0.25 correctly handles case where amount > balance
		-0.25 correctly handles case where amount <= balance

SavingsAccount (2 points)
	-0.5 constructor
		-0.25 correctly calls super to initialize balance in BankAccount
		-0.25 throws exception if rate is negative
	-0.25 getRate() 
		-0.25 method is present and correct
	-0.5 deposit()
		-0.25 method correctly calls super.deposit()
		-0.25 method deposits correct amount
	-0.75 toString()
		-0.25 calls super.toString() corrrectly
		-0.25 correctly adds addition "@ " rate
		-0.25 rate is multiplied by 100 when represented in toString()

CheckingAccount (2 points)
	-0.5 constructor
		-0.25 correctly calls super to initialize balance in BankAccount
		-0.25 throws exception if limit < 1
	-0.25 getter methods
		-0.125 getWithdrawLimit() is present and correct
		-0.125 getWithdrawCount() is present and correct
	-0.5 toString() method
		-0.25 calls super.toString() correctly
		-0.25 correctly adds "(C/L)", where C=withdrawCount and L=withdrawLimit
	-0.75 withdraw() method
		-0.25 handles case where withdrawCount < withdrawLimit
		-0.25 correctly increments withdrawCount (only when a withdraw can actually be made)
		-0.25 returns correct value (0 if no withdraw made)

BankTester (worth 3 points)
	-0.5 initialize() method
		-0.25 adds 6 BankAccounts to accounts, after initializing it to an empty array list
		-0.25 adds 8 different Objects to objects, after initializing it to an empty array list
	-0.5 dynamicDispatching()
		-0.25 correctly prints out each BankAccount's toString()
		-0.25 prints each Object in objects to showcase different toString() behavior
	-1.0 extra Tests
		-0.5 has test where they deposit into each account and checks values against toString() method, does the test correctly
		-0.5 has test where withdraw is checked, particularly on the CheckingAccounts, does the testing correctly
	-1.0 passes all tests in BankTester


