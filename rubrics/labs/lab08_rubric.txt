Recursion(worth 6.5 points)
	-1.0 factorial
		-throws exception in n < 0
		-handles base cases (0 or 1)
		-correct recursive case
	-0.5 squareRoot
		-calls squareRootHelper with a good intial guess
	-1.0 squareRootHelper
		-handles base cases (0, 1, close enough)
		-handles recursive case
	-0.5 sum(List<Integer>)
		-calls sumHelper with good initial value for index
	-1.0 sumHelper(List<Integer>, int)
		-0.5 handles base case (at end of list or the list is empty)
		-0.5 handles recursive case
	-0.5 sum(int[])
		-calls sumHelper with good initial value for index
	-1.0 sumHelper(int[], int)
		-0.5 handles base cases (at end of array or the array is empty)
		-0.5 handles recursive case
	-1.0 binomialCoefficient
		-0.5 handles base cases
			-2k > n
			-k == 0
		-0.5 handles recursive case

Tester (worth 3.5 points)
	-0.7 factorial tests
		-0.35 tests both base cases
		-0.35 tests non base case
	-0.7 squareroot tests
		-0.35 tests either base case
		-0.35 tets non base case
	-0.7 sum(list) test
		-0.7 tests non base case with 3 non-null ints
	-0.7 sum(int[]) test
		-0.7 tests non base case with 3 ints
	-0.7 binomialCoefficient test
		-0.35 tests with k <= n/2, n > 2
		-0.35 tests with k > n/2, n > 2

Bonus (worth 1 extra point)
	-no partial credit
	-see example solutions in rubric folder